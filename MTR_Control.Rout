
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # ------------------------------------------------------------------------------------ #
> # -- Initial Developer: FranciscoME ----------------------------------------------- -- #
> # -- Code: MachineTradeR Main Control --------------------------------------------- -- #
> # -- License: MIT ----------------------------------------------------------------- -- #
> # ------------------------------------------------------------------------------------ #
> 
> # -- Cargar librerias ---------------------------------------------------------------- #
> 
> pkg <- c("base","downloader","fBasics","forecast","grid","gridExtra",
+          "httr","jsonlite","lubridate","moments","PerformanceAnalytics","plyr",
+          "quantmod","reshape2","RCurl","stats","scales","tree","tseries",
+          "TTR","TSA","twitteR","xts","xlsx","zoo")
> 
> inst <- pkg %in% installed.packages()
> if(length(pkg[!inst]) > 0) install.packages(pkg[!inst])
> instpackages <- lapply(pkg, library, character.only=TRUE)
Loading required package: timeDate
Loading required package: timeSeries


Rmetrics Package fBasics
Analysing Markets and calculating Basic Statistics
Copyright (C) 2005-2014 Rmetrics Association Zurich
Educational Software for Financial Engineering and Computational Science
Rmetrics is free software and comes with ABSOLUTELY NO WARRANTY.
https://www.rmetrics.org --- Mail to: info@rmetrics.org
Loading required package: zoo

Attaching package: ‘zoo’

The following object is masked from ‘package:timeSeries’:

    time<-

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

This is forecast 6.1 


Attaching package: ‘jsonlite’

The following object is masked from ‘package:utils’:

    View


Attaching package: ‘moments’

The following objects are masked from ‘package:timeDate’:

    kurtosis, skewness

Loading required package: xts

Attaching package: ‘PerformanceAnalytics’

The following objects are masked from ‘package:moments’:

    kurtosis, skewness

The following objects are masked from ‘package:timeDate’:

    kurtosis, skewness

The following object is masked from ‘package:graphics’:

    legend


Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

Loading required package: TTR

Attaching package: ‘TTR’

The following object is masked from ‘package:fBasics’:

    volatility

Version 0.4-0 included new data defaults. See ?getSymbols.
Loading required package: bitops
Loading required package: leaps
Loading required package: locfit
locfit 1.5-9.1 	 2013-03-22
Loading required package: mgcv
Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:forecast’:

    getResponse

This is mgcv 1.8-7. For overview type 'help("mgcv-package")'.

Attaching package: ‘TSA’

The following objects are masked from ‘package:PerformanceAnalytics’:

    kurtosis, skewness

The following objects are masked from ‘package:moments’:

    kurtosis, skewness

The following objects are masked from ‘package:forecast’:

    fitted.Arima, plot.Arima

The following objects are masked from ‘package:timeDate’:

    kurtosis, skewness

The following objects are masked from ‘package:stats’:

    acf, arima

The following object is masked from ‘package:utils’:

    tar


Attaching package: ‘twitteR’

The following object is masked from ‘package:plyr’:

    id

The following object is masked from ‘package:timeSeries’:

    description

Loading required package: rJava

Attaching package: ‘rJava’

The following object is masked from ‘package:RCurl’:

    clone

Loading required package: xlsxjars
> 
> # -- Opciones genericas -------------------------------------------------------------- #
> 
> options("scipen"=100,"getSymbols.warning4.0"=FALSE,concordance=TRUE)
> Sys.setlocale(category = "LC_ALL", locale = "")
[1] "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=es_MX.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=es_MX.UTF-8;LC_MESSAGES=en_US.UTF-8;LC_PAPER=es_MX.UTF-8;LC_NAME=es_MX.UTF-8;LC_ADDRESS=es_MX.UTF-8;LC_TELEPHONE=es_MX.UTF-8;LC_MEASUREMENT=es_MX.UTF-8;LC_IDENTIFICATION=es_MX.UTF-8"
> 
> # -- Source MTR_Collector --------------------------------------------------------- -- #
> 
> source('~/Documents/GitHub/MachineTradeR/MTR_Collector/MTR_Collector.R', echo=TRUE)

> RawGitHub <- "https://raw.githubusercontent.com/IFFranciscoME/"

> ROandaAPI <- paste(RawGitHub, "ROandaAPI/master/ROandaAPI.R", 
+     sep = "")

> downloader::source_url(ROandaAPI, prompt = FALSE, 
+     quiet = TRUE)
trying URL 'https://raw.githubusercontent.com/IFFranciscoME/ROandaAPI/master/ROandaAPI.R'
Content type 'text/plain; charset=utf-8' length 28692 bytes (28 KB)
==================================================
downloaded 28 KB


> OnTokens <- read.csv("~/Documents/GitHub/MachineTradeR/MTR_Tokens/OandaTokens.csv")

> ON_At <- as.character(OnTokens[1, 1])

> ON_Ai <- as.numeric(OnTokens[1, 2])

> ON_Ak <- as.character(OnTokens[1, 3])

> TwTokens <- read.csv("~/Documents/GitHub/MachineTradeR/MTR_Tokens/TwitterTokens.csv")

> TWCK <- as.character(TwTokens[1, 1])

> TWCS <- as.character(TwTokens[1, 2])

> TWAT <- as.character(TwTokens[1, 3])

> TWAS <- as.character(TwTokens[1, 4])

> Ini <- Sys.Date() - 500

> Fin <- Sys.Date()

> ON_Gt <- "D"

> ON_In <- "AUD_USD"

> ON_Da <- 17

> ON_Ta <- "America%2FMexico_City"

> ON_Ls <- data.frame(InstrumentsList(ON_At, ON_Ak, 
+     ON_Ai))[, c(1, 3)]

> ON_Ph <- HisPrices(ON_At, ON_Gt, ON_Da, ON_Ta, ON_Ak, 
+     ON_In, Ini, Fin)

> ON_Pa <- ActualPrice(ON_At, ON_Ak, ON_In)

> save.image("~/Documents/GitHub/MachineTradeR/MTR_Collector/MTR_Collector_Data.RData")
> 
> source('~/Documents/GitHub/MachineTradeR/MTR_Algos/MTR_Algo_0.R', echo=TRUE)

> load("~/Documents/GitHub/MachineTradeR/MTR_Collector/MTR_Collector_Data.RData")

> Par1 <- 28

> Par2 <- 0.9

> Par3 <- 1000

> Reg <- c()

> PipValue <- 1

> Comision <- 0

> PrecioCl <- data.frame(ON_Ph$TimeStamp, round(ON_Ph$Close, 
+     4))

> colnames(PrecioCl) <- c("TimeStamp", "PrecioCl")

> PrecioAct <- ON_Pa

> ResagosCl <- data.frame(cbind(PrecioCl[, 1:2], Lag(x = PrecioCl$PrecioCl, 
+     k = 1:Par1)))

> ResagosCl <- ResagosCl[complete.cases(ResagosCl), 
+     ]

> ResagosCl$TimeStamp <- ResagosCl$TimeStamp

> for (i in 1:Par1) {
+     RegMultCl <- lm(PrecioCl ~ . - TimeStamp - 1, data = ResagosCl, 
+         method = "qr")
+     SumRegMultCl <- summary(Re .... [TRUNCATED] 

> CoefSign <- row.names(SumRegMultCl$coefficients)

> DatosPrep <- data.frame(ResagosCl[2:length(ResagosCl[, 
+     1]), 1:2])

> for (i in 1:length(CoefSign)) DatosPrep[, 2 + i] <- round(diff(log(ResagosCl[, 
+     which(colnames(ResagosCl) == CoefSign[i])])), 4)

> colnames(DatosPrep) <- c("TimeStamp", "PrecioCl", 
+     CoefSign)

> CoefSign <- row.names(SumRegMultCl$coefficients)

> Resagos <- c()

> for (i in 1:length(CoefSign)) Resagos[i] <- as.numeric(substr(CoefSign[i], 
+     start = 5, stop = 6))

> ResagosClVal <- data.frame(cbind(PrecioCl[, 1:2], 
+     Lag(x = PrecioCl$PrecioCl, k = Resagos)))

> ResagosClVal <- ResagosClVal[-c(1:max(Resagos)), ]

> TradeStrat <- ResagosClVal[, c(1, 3, 2)]

> colnames(TradeStrat) <- c("TimeStamp", "Close_Pasado", 
+     "Close_Presente")

> TradeStrat$Close_Futuro <- 0

> for (i in 1:length(ResagosClVal[, 1])) TradeStrat$Close_Futuro[i] <- predict(RegMultCl, 
+     ResagosClVal[i, c(1, 3:length(ResagosClVal[1, ]))], i .... [TRUNCATED] 

> for (i in 1:length(ResagosClVal[, 1])) TradeStrat$Accion[i] <- ifelse(TradeStrat$Close_Futuro[i] > 
+     TradeStrat$Close_Presente[i], "Compra", "V ..." ... [TRUNCATED] 

> TradeStrat$Balance[1] <- Par3

> TradeStrat$PeriodPL <- 0

> for (i in 2:length(ResagosClVal[, 1])) {
+     TradeStrat$PeriodPL[i] <- ifelse(TradeStrat$Accion[i - 1] == 
+         "Venta", (TradeStrat$Close_Pr .... [TRUNCATED] 

> for (i in 2:length(ResagosClVal[, 1])) {
+     TradeStrat$PeriodPL[i] <- ifelse(TradeStrat$Accion[i - 1] == 
+         "Venta", ((TradeStrat$Close_P .... [TRUNCATED] 

> PrecioPron <- as.numeric(round(last(DatosPrep)$PrecioCl - 
+     last(DatosPrep)$PrecioCl * predict(RegMultCl, last(DatosPrep)), 
+     4))

> HoraPron <- last(DatosPrep)$TimeStamp + 2 * 60 * 60 * 
+     24

> save.image("~/Documents/GitHub/MachineTradeR/MTR_Algos/MTR_Algo_0_Data.RData")
> 
> source('~/Documents/GitHub/MachineTradeR/MTR_Trader/MTR_Trader.R', echo=TRUE)

> OnTokens <- read.csv("~/Documents/GitHub/MachineTradeR/MTR_Tokens/OandaTokens.csv")

> ONAT <- as.character(OnTokens[1, 1])

> ONAI <- as.numeric(OnTokens[1, 2])

> ONAK <- as.character(OnTokens[1, 3])

> TwTokens <- read.csv("~/Documents/GitHub/MachineTradeR/MTR_Tokens/TwitterTokens.csv")

> TWCK <- as.character(TwTokens[1, 1])

> TWCS <- as.character(TwTokens[1, 2])

> TWAT <- as.character(TwTokens[1, 3])

> TWAS <- as.character(TwTokens[1, 4])

> PrecioAct <- ActualPrice(ON_At, ON_Ak, ON_In)

> PrecioPro <- PrecioPron

> HoraAct <- as.POSIXct(Sys.timeDate(), origin = "1970-01-01")

> HoraPro <- HoraPron

> ON_Sd <- ifelse(PrecioAct$Bid < PrecioPro, ON_Sd <- "buy", 
+     ON_Sd <- "sell")

> ON_Ts <- 10

> ON_Ex <- "2016-01-28 19:00:00"

> ON_Ct <- 20

> ON_Ot <- "market"

> ON_Pr <- PrecioAct

> ON_Sl <- ifelse(ON_Sd == "sell", PrecioAct[, 2] + 
+     0.003, PrecioAct[, 2] - 0.003)

> ON_Tp <- ifelse(ON_Sd == "sell", PrecioAct[, 2] - 
+     0.003, PrecioAct[, 2] + 0.003)

> ON_Oi <- 10086591560

> InfoCuenta <- AccountInfo(ON_At, ON_Ai, ON_Ak)

> InfoOrdenes <- AccountOrders(ON_At, ON_Ai, ON_Ak, 
+     ON_In)

> InfoNuevaOp <- NewOrder(AccountType = ON_At, AccountID = ON_Ai, 
+     Token = ON_Ak, OrderType = ON_Ot, Instrument = ON_In, Count = ON_Ct, 
+     S .... [TRUNCATED] 

> InfoNuevaOp
$instrument
[1] "AUD_USD"

$time
[1] "2016-01-27T03:26:31.000000Z"

$price
[1] 0.70256

$tradeOpened
$tradeOpened$id
[1] 10088588788

$tradeOpened$units
[1] 20

$tradeOpened$side
[1] "buy"

$tradeOpened$takeProfit
[1] 0

$tradeOpened$stopLoss
[1] 0

$tradeOpened$trailingStop
[1] 0


$tradesClosed
list()

$tradeReduced
named list()

> 
> 
> 
> proc.time()
   user  system elapsed 
  7.628   0.104  27.858 
