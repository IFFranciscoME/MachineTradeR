# ----------------------------------------------------------------------------------------------- #
# -- Desarrollador que Manteniene: FranciscoME -- francisco@tradingpal.com ------------------- -- #
# -- Codigo: 0_H4_MT1_Controlador ------------------------------------------------------------ -- #
# -- Licencia: Propiedad exclusiva de TradingPal --------------------------------------------- -- #
# -- Uso: Controlador general para Sistema H4 ------------------------------------------------ -- #
# -- Dependencias: Lista de Paquetes de R, Conexion a internet, GitHub, OANDA API ------------ -- #
# ----------------------------------------------------------------------------------------------- #
# -- Borrar todos los elementos del environment
rm(list=ls())
# -- ETAPA 0 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ----------------------------------- 0_H4_MT1_Controlador -- #
# -- ----------------------------------------------------------------------------------------- -- #
# -- Establecer el sistema de medicion de la computadora
Sys.setlocale(category = "LC_ALL", locale = "")
# -- Huso horario
Sys.setenv(tz="America/Monterrey")
options(tz="America/Monterrey")
Sys.setenv(TZ="America/Monterrey")
options(TZ="America/Monterrey")
# -- -------------------------------------------------------------------------------------------- #
# -- --------------------------------------------------------------------- Paquetes a utilizar -- #
pkg <- c("base","downloader","dplyr","fBasics","forecast","googlesheets","grid",
"gridExtra","httr","h2o","jsonlite","knitr","lmtest","lubridate","moments",
"matrixStats", "PerformanceAnalytics","plyr","quantmod","randomForest",
"reshape2","RCurl","stats","scales","tree","tseries",
"TTR","TSA","twitteR","XML","xts","xlsx","zoo")
inst <- pkg %in% installed.packages()
if(length(pkg[!inst]) > 0) install.packages(pkg[!inst])
instpackages <- lapply(pkg, library, character.only=TRUE)
# -- -------------------------------------------------------------------------------------------- #
# -- ------------------------------------------------------------ Cargar archivos desde GitHub -- #
RawGitHub <- "https://raw.githubusercontent.com/IFFranciscoME/"
ROandaAPI <- paste(RawGitHub,"ROandaAPI/master/ROandaAPI.R",sep="")
downloader::source_url(ROandaAPI,prompt=FALSE,quiet=TRUE)
RTradingPal   <- paste(RawGitHub,"RTradingPalAPI/master/RTradingPalAPI.R",sep="")
downloader::source_url(RTradingPal,prompt=FALSE,quiet=TRUE)
DataProcessor <- paste(RawGitHub,"DataProcessor/master/DataProcessor.R",sep="")
downloader::source_url(DataProcessor,prompt=FALSE,quiet=TRUE)
# -- ETAPA 1 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ------------------- R_MachineTrader_Registro -- Registro -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/R_MachineTrader_Registro.R', echo=TRUE)
# -- ETAPA 2 --------------------------------------------------------------------------------- -- #
# -- Recolector de datos a utilizar en  el sistema ------------- 1_H4_MT1_Colector -- Colector -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/1_H4_MT1_Colector.R', echo=TRUE)
# -- ETAPA 3 --------------------------------------------------------------------------------- -- #
# -- Algoritmo 01 BoxJenkins -------------------------------------- 2_H4_MT1_Algo -- Algoritmo -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/2_H4_MT1_Algo.R', echo=TRUE)
User_02
Inst_H4  <- gsub(x = Inst_H4, pattern = "_", replacement = "")
User_H4  <- User_02
Datos_H4 <- Algo_MT1_H4_Datos
# ----------------------------------------------------------------------------------------------- #
# -- Desarrollador que Manteniene: FranciscoME -- francisco@tradingpal.com ------------------- -- #
# -- Codigo: 0_H4_MT1_Controlador ------------------------------------------------------------ -- #
# -- Licencia: Propiedad exclusiva de TradingPal --------------------------------------------- -- #
# -- Uso: Controlador general para Sistema H4 ------------------------------------------------ -- #
# -- Dependencias: Lista de Paquetes de R, Conexion a internet, GitHub, OANDA API ------------ -- #
# ----------------------------------------------------------------------------------------------- #
# -- Borrar todos los elementos del environment
rm(list=ls())
# -- ETAPA 0 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ----------------------------------- 0_H4_MT1_Controlador -- #
# -- ----------------------------------------------------------------------------------------- -- #
# -- Establecer el sistema de medicion de la computadora
Sys.setlocale(category = "LC_ALL", locale = "")
# -- Huso horario
Sys.setenv(tz="America/Monterrey")
options(tz="America/Monterrey")
Sys.setenv(TZ="America/Monterrey")
options(TZ="America/Monterrey")
# -- -------------------------------------------------------------------------------------------- #
# -- --------------------------------------------------------------------- Paquetes a utilizar -- #
pkg <- c("base","downloader","dplyr","fBasics","forecast","googlesheets","grid",
"gridExtra","httr","h2o","jsonlite","knitr","lmtest","lubridate","moments",
"matrixStats", "PerformanceAnalytics","plyr","quantmod","randomForest",
"reshape2","RCurl","stats","scales","tree","tseries",
"TTR","TSA","twitteR","XML","xts","xlsx","zoo")
inst <- pkg %in% installed.packages()
if(length(pkg[!inst]) > 0) install.packages(pkg[!inst])
instpackages <- lapply(pkg, library, character.only=TRUE)
# -- -------------------------------------------------------------------------------------------- #
# -- ------------------------------------------------------------ Cargar archivos desde GitHub -- #
RawGitHub <- "https://raw.githubusercontent.com/IFFranciscoME/"
ROandaAPI <- paste(RawGitHub,"ROandaAPI/master/ROandaAPI.R",sep="")
downloader::source_url(ROandaAPI,prompt=FALSE,quiet=TRUE)
RTradingPal   <- paste(RawGitHub,"RTradingPalAPI/master/RTradingPalAPI.R",sep="")
downloader::source_url(RTradingPal,prompt=FALSE,quiet=TRUE)
DataProcessor <- paste(RawGitHub,"DataProcessor/master/DataProcessor.R",sep="")
downloader::source_url(DataProcessor,prompt=FALSE,quiet=TRUE)
# -- ETAPA 1 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ------------------- R_MachineTrader_Registro -- Registro -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/R_MachineTrader_Registro.R', echo=TRUE)
# -- ETAPA 2 --------------------------------------------------------------------------------- -- #
# -- Recolector de datos a utilizar en  el sistema ------------- 1_H4_MT1_Colector -- Colector -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/1_H4_MT1_Colector.R', echo=TRUE)
# -- ETAPA 3 --------------------------------------------------------------------------------- -- #
# -- Algoritmo 01 BoxJenkins -------------------------------------- 2_H4_MT1_Algo -- Algoritmo -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/2_H4_MT1_Algo.R', echo=TRUE)
Tam_Ventana   <- 132
TakeProfit    <- 52
StopLoss      <- 22
Dinamica_Algo <- 0
Lotes <- 1
# -- ----------------------------------------------------------------------------------------- -- #
# -- Datos para utilizar en MODELO --------------------------------------------------- ETAPA 1 -- #
# -- ----------------------------------------------------------------------------------------- -- #
V1 <- as.numeric(length(Algo_MT1_H4_Datos$Precios_H_1[,1]) - Tam_Ventana)
V2 <- as.numeric(length(Algo_MT1_H4_Datos$Precios_H_1[,1]))
Datos <- Algo_MT1_H4_Datos$Precios_H_1[V1:V2,]
Datos <- data.frame(Datos$TimeStamp[-1], diff(log(Datos$Close)))
colnames(Datos) <- c("TimeStamp","RendClose")
Valores <- list(list())
Algo_MT1_H4_Datos
# -- Instrumento
Inst_H4 <- "AUD_JPY"
# -- Periodicidad
Per <- "H4"
# -- Otros parametros
OA_Da <- 17
OA_Ta <- "America/Mexico_City" # Uso horario
MultPip1 <- 1000
# -- Precios
Algo_MT1_H4_Datos <- list(
Precios_H_1 = HisPrices(OA_At,Per,OA_Da,OA_Ta,OA_Ak,Inst_D,NULL,NULL,900),
Precios_A_1 = list(Bid = ActualPrice(OA_At,OA_Ak,Inst_D)$Bid,
Ask = ActualPrice(OA_At,OA_Ak,Inst_D)$Ask)
)
# ----------------------------------------------------------------------------------------------- #
# -- Desarrollador que Manteniene: FranciscoME -- francisco@tradingpal.com ------------------- -- #
# -- Codigo: 0_H4_MT1_Controlador ------------------------------------------------------------ -- #
# -- Licencia: Propiedad exclusiva de TradingPal --------------------------------------------- -- #
# -- Uso: Controlador general para Sistema H4 ------------------------------------------------ -- #
# -- Dependencias: Lista de Paquetes de R, Conexion a internet, GitHub, OANDA API ------------ -- #
# ----------------------------------------------------------------------------------------------- #
# -- Borrar todos los elementos del environment
rm(list=ls())
# -- ETAPA 0 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ----------------------------------- 0_H4_MT1_Controlador -- #
# -- ----------------------------------------------------------------------------------------- -- #
# -- Establecer el sistema de medicion de la computadora
Sys.setlocale(category = "LC_ALL", locale = "")
# -- Huso horario
Sys.setenv(tz="America/Monterrey")
options(tz="America/Monterrey")
Sys.setenv(TZ="America/Monterrey")
options(TZ="America/Monterrey")
# -- -------------------------------------------------------------------------------------------- #
# -- --------------------------------------------------------------------- Paquetes a utilizar -- #
pkg <- c("base","downloader","dplyr","fBasics","forecast","googlesheets","grid",
"gridExtra","httr","h2o","jsonlite","knitr","lmtest","lubridate","moments",
"matrixStats", "PerformanceAnalytics","plyr","quantmod","randomForest",
"reshape2","RCurl","stats","scales","tree","tseries",
"TTR","TSA","twitteR","XML","xts","xlsx","zoo")
inst <- pkg %in% installed.packages()
if(length(pkg[!inst]) > 0) install.packages(pkg[!inst])
instpackages <- lapply(pkg, library, character.only=TRUE)
# -- -------------------------------------------------------------------------------------------- #
# -- ------------------------------------------------------------ Cargar archivos desde GitHub -- #
RawGitHub <- "https://raw.githubusercontent.com/IFFranciscoME/"
ROandaAPI <- paste(RawGitHub,"ROandaAPI/master/ROandaAPI.R",sep="")
downloader::source_url(ROandaAPI,prompt=FALSE,quiet=TRUE)
RTradingPal   <- paste(RawGitHub,"RTradingPalAPI/master/RTradingPalAPI.R",sep="")
downloader::source_url(RTradingPal,prompt=FALSE,quiet=TRUE)
DataProcessor <- paste(RawGitHub,"DataProcessor/master/DataProcessor.R",sep="")
downloader::source_url(DataProcessor,prompt=FALSE,quiet=TRUE)
# -- ETAPA 1 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ------------------- R_MachineTrader_Registro -- Registro -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/R_MachineTrader_Registro.R', echo=TRUE)
# -- ETAPA 2 --------------------------------------------------------------------------------- -- #
# -- Recolector de datos a utilizar en  el sistema ------------- 1_H4_MT1_Colector -- Colector -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/1_H4_MT1_Colector.R', echo=TRUE)
# -- ETAPA 3 --------------------------------------------------------------------------------- -- #
# -- Algoritmo 01 BoxJenkins -------------------------------------- 2_H4_MT1_Algo -- Algoritmo -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/2_H4_MT1_Algo.R', echo=TRUE)
# ----------------------------------------------------------------------------------------------- #
# -- Desarrollador que Manteniene: FranciscoME -- francisco@tradingpal.com ------------------- -- #
# -- Codigo: 0_H4_MT1_Controlador ------------------------------------------------------------ -- #
# -- Licencia: Propiedad exclusiva de TradingPal --------------------------------------------- -- #
# -- Uso: Controlador general para Sistema H4 ------------------------------------------------ -- #
# -- Dependencias: Lista de Paquetes de R, Conexion a internet, GitHub, OANDA API ------------ -- #
# ----------------------------------------------------------------------------------------------- #
# -- Borrar todos los elementos del environment
rm(list=ls())
# -- ETAPA 0 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ----------------------------------- 0_H4_MT1_Controlador -- #
# -- ----------------------------------------------------------------------------------------- -- #
# -- Establecer el sistema de medicion de la computadora
Sys.setlocale(category = "LC_ALL", locale = "")
# -- Huso horario
Sys.setenv(tz="America/Monterrey")
options(tz="America/Monterrey")
Sys.setenv(TZ="America/Monterrey")
options(TZ="America/Monterrey")
# -- -------------------------------------------------------------------------------------------- #
# -- --------------------------------------------------------------------- Paquetes a utilizar -- #
pkg <- c("base","downloader","dplyr","fBasics","forecast","googlesheets","grid",
"gridExtra","httr","h2o","jsonlite","knitr","lmtest","lubridate","moments",
"matrixStats", "PerformanceAnalytics","plyr","quantmod","randomForest",
"reshape2","RCurl","stats","scales","tree","tseries",
"TTR","TSA","twitteR","XML","xts","xlsx","zoo")
inst <- pkg %in% installed.packages()
if(length(pkg[!inst]) > 0) install.packages(pkg[!inst])
instpackages <- lapply(pkg, library, character.only=TRUE)
# -- -------------------------------------------------------------------------------------------- #
# -- ------------------------------------------------------------ Cargar archivos desde GitHub -- #
RawGitHub <- "https://raw.githubusercontent.com/IFFranciscoME/"
ROandaAPI <- paste(RawGitHub,"ROandaAPI/master/ROandaAPI.R",sep="")
downloader::source_url(ROandaAPI,prompt=FALSE,quiet=TRUE)
RTradingPal   <- paste(RawGitHub,"RTradingPalAPI/master/RTradingPalAPI.R",sep="")
downloader::source_url(RTradingPal,prompt=FALSE,quiet=TRUE)
DataProcessor <- paste(RawGitHub,"DataProcessor/master/DataProcessor.R",sep="")
downloader::source_url(DataProcessor,prompt=FALSE,quiet=TRUE)
# -- ETAPA 1 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ------------------- R_MachineTrader_Registro -- Registro -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/R_MachineTrader_Registro.R', echo=TRUE)
# -- ETAPA 2 --------------------------------------------------------------------------------- -- #
# -- Recolector de datos a utilizar en  el sistema ------------- 1_H4_MT1_Colector -- Colector -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/1_H4_MT1_Colector.R', echo=TRUE)
# -- ETAPA 3 --------------------------------------------------------------------------------- -- #
# -- Algoritmo 01 BoxJenkins -------------------------------------- 2_H4_MT1_Algo -- Algoritmo -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/2_H4_MT1_Algo.R', echo=TRUE)
# ----------------------------------------------------------------------------------------------- #
# -- Desarrollador que Manteniene: FranciscoME -- francisco@tradingpal.com ------------------- -- #
# -- Codigo: 0_H4_MT1_Controlador ------------------------------------------------------------ -- #
# -- Licencia: Propiedad exclusiva de TradingPal --------------------------------------------- -- #
# -- Uso: Controlador general para Sistema H4 ------------------------------------------------ -- #
# -- Dependencias: Lista de Paquetes de R, Conexion a internet, GitHub, OANDA API ------------ -- #
# ----------------------------------------------------------------------------------------------- #
# -- Borrar todos los elementos del environment
rm(list=ls())
# -- ETAPA 0 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ----------------------------------- 0_H4_MT1_Controlador -- #
# -- ----------------------------------------------------------------------------------------- -- #
# -- Establecer el sistema de medicion de la computadora
Sys.setlocale(category = "LC_ALL", locale = "")
# -- Huso horario
Sys.setenv(tz="America/Monterrey")
options(tz="America/Monterrey")
Sys.setenv(TZ="America/Monterrey")
options(TZ="America/Monterrey")
# -- -------------------------------------------------------------------------------------------- #
# -- --------------------------------------------------------------------- Paquetes a utilizar -- #
pkg <- c("base","downloader","dplyr","fBasics","forecast","googlesheets","grid",
"gridExtra","httr","h2o","jsonlite","knitr","lmtest","lubridate","moments",
"matrixStats", "PerformanceAnalytics","plyr","quantmod","randomForest",
"reshape2","RCurl","stats","scales","tree","tseries",
"TTR","TSA","twitteR","XML","xts","xlsx","zoo")
inst <- pkg %in% installed.packages()
if(length(pkg[!inst]) > 0) install.packages(pkg[!inst])
instpackages <- lapply(pkg, library, character.only=TRUE)
# -- -------------------------------------------------------------------------------------------- #
# -- ------------------------------------------------------------ Cargar archivos desde GitHub -- #
RawGitHub <- "https://raw.githubusercontent.com/IFFranciscoME/"
ROandaAPI <- paste(RawGitHub,"ROandaAPI/master/ROandaAPI.R",sep="")
downloader::source_url(ROandaAPI,prompt=FALSE,quiet=TRUE)
RTradingPal   <- paste(RawGitHub,"RTradingPalAPI/master/RTradingPalAPI.R",sep="")
downloader::source_url(RTradingPal,prompt=FALSE,quiet=TRUE)
DataProcessor <- paste(RawGitHub,"DataProcessor/master/DataProcessor.R",sep="")
downloader::source_url(DataProcessor,prompt=FALSE,quiet=TRUE)
# -- ETAPA 1 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ------------------- R_MachineTrader_Registro -- Registro -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/R_MachineTrader_Registro.R', echo=TRUE)
# -- ETAPA 2 --------------------------------------------------------------------------------- -- #
# -- Recolector de datos a utilizar en  el sistema ------------- 1_H4_MT1_Colector -- Colector -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/1_H4_MT1_Colector.R', echo=TRUE)
# -- ETAPA 3 --------------------------------------------------------------------------------- -- #
# -- Algoritmo 01 BoxJenkins -------------------------------------- 2_H4_MT1_Algo -- Algoritmo -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/2_H4_MT1_Algo.R', echo=TRUE)
Inst_H4  <- gsub(x = Inst_H4, pattern = "_", replacement = "")
User_H4  <- User_02
Datos_H4 <- Algo_MT1_H4_Datos
Open_Trades_H4 <- TP_GetTrades(UserID = User_H4$TPUID)
if(any(Open_Trades_D$symbol == Inst_D))  {
Open_Trades_D <- Open_Trades_D[which(Open_Trades_D$symbol == Inst_D),]
} else {
Open_Trades_D <- data.frame(matrix(nrow=1,ncol=12,data=0))
colnames(Open_Trades_D) <- c("free_margin","id","isSelf","lots","margin", "op_type",
"open","sl", "symbol","tp","user","joint")
}
Open_Trades_H4 <- TP_GetTrades(UserID = User_H4$TPUID)
if(any(Open_Trades_H4$symbol == Inst_D))  {
Open_Trades_H4 <- Open_Trades_H4[which(Open_Trades_H4$symbol == Inst_H4),]
} else {
Open_Trades_H4 <- data.frame(matrix(nrow=1,ncol=12,data=0))
colnames(Open_Trades_H4) <- c("free_margin","id","isSelf","lots","margin", "op_type",
"open","sl", "symbol","tp","user","joint")
}
if(any(Open_Trades_H4$symbol == Inst_H4))  {
Open_Trades_H4 <- Open_Trades_H4[which(Open_Trades_H4$symbol == Inst_H4),]
} else {
Open_Trades_H4 <- data.frame(matrix(nrow=1,ncol=12,data=0))
colnames(Open_Trades_H4) <- c("free_margin","id","isSelf","lots","margin", "op_type",
"open","sl", "symbol","tp","user","joint")
}
Open_Trades_H4
Inst_H4  <- gsub(x = Inst_H4, pattern = "_", replacement = "")
User_H4  <- User_02
Datos_H4 <- Algo_MT1_H4_Datos
Open_Trades_H4 <- TP_GetTrades(UserID = User_H4$TPUID)
if(any(Open_Trades_H4$symbol == Inst_H4))  {
Open_Trades_H4 <- Open_Trades_H4[which(Open_Trades_H4$symbol == Inst_H4),]
} else {
Open_Trades_H4 <- data.frame(matrix(nrow=1,ncol=12,data=0))
colnames(Open_Trades_H4) <- c("free_margin","id","isSelf","lots","margin", "op_type",
"open","sl", "symbol","tp","user","joint")
}
if(Open_Trades_H4$free_margin !=0) {
# -- --------------------------------------------
# -- Cerrar operaciones abiertas
# -- --------------------------------------------
Closed_Trade <- TP_CloseTrade(
P0_Token   = as.character(User_H4$Token$Token),
P1_tradeID = Open_Trades_H4$id[1],
P2_userID  = User_H4$TPUID)
# -- --------------------------------------------
# -- Abrir operacion con parametros del algoritmo
# -- --------------------------------------------
Last_Trade   <- TP_OpenTrade(
P0_Token = as.character(User_H4$Token$Token),
P1_symbol = Inst_H4,
P2_sl = Datos_H4$Finales$SL,
P3_tp = Datos_H4$Finales$TP,
P4_lots = Datos_H4$Finales$LT,
P5_op_type = Datos_H4$Finales$Trade)
} else {
# -- --------------------------------------------
# -- Abrir operacion con parametros del algoritmo
# -- --------------------------------------------
Last_Trade   <- TP_OpenTrade(
P0_Token = as.character(User_H4$Token$Token),
P1_symbol = Inst_H4,
P2_sl = Datos_H4$Finales$SL,
P3_tp = Datos_H4$Finales$TP,
P4_lots = Datos_H4$Finales$LT,
P5_op_type = Datos_H4$Finales$Trade)
}
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/0_H4_MT1_Controlador.R', echo=TRUE)
Inst_H4
User_H4
Datos_H4
Open_Trades_H4 <- TP_GetTrades(UserID = User_H4$TPUID)
Open_Trades_H4
any(Open_Trades_H4$symbol == Inst_H4)
Open_Trades_H4 <- data.frame(matrix(nrow=1,ncol=12,data=0))
colnames(Open_Trades_H4) <- c("free_margin","id","isSelf","lots","margin", "op_type",
"open","sl", "symbol","tp","user","joint")
Open_Trades_H4$free_margin !=0
as.character(User_H4$Token$Token)
Inst_H4
Datos_H4$Finales$SL
Datos_H4$Finales$TP
Datos_H4$Finales$LT
Datos_H4$Finales$Trade
Last_Trade
TP_OpenTrade(
P0_Token = as.character(User_H4$Token$Token),
P1_symbol = Inst_H4,
P2_sl = Datos_H4$Finales$SL,
P3_tp = Datos_H4$Finales$TP,
P4_lots = Datos_H4$Finales$LT,
P5_op_type = Datos_H4$Finales$Trade)
Algo_MT1_H4_Datos$Precios_A_1$Bid
Inst_H4
ActualPrice(OA_At,OA_Ak,Inst_H4)$Bid
ActualPrice(OA_At,OA_Ak,Inst_H4)
Inst_H4
Inst_H4 <- "AUD_JPY"
ActualPrice(OA_At,OA_Ak,Inst_H4)
# ----------------------------------------------------------------------------------------------- #
# -- Desarrollador que Manteniene: FranciscoME -- francisco@tradingpal.com ------------------- -- #
# -- Codigo: 0_H4_MT1_Controlador ------------------------------------------------------------ -- #
# -- Licencia: Propiedad exclusiva de TradingPal --------------------------------------------- -- #
# -- Uso: Controlador general para Sistema H4 ------------------------------------------------ -- #
# -- Dependencias: Lista de Paquetes de R, Conexion a internet, GitHub, OANDA API ------------ -- #
# ----------------------------------------------------------------------------------------------- #
# -- Borrar todos los elementos del environment
rm(list=ls())
# -- ETAPA 0 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ----------------------------------- 0_H4_MT1_Controlador -- #
# -- ----------------------------------------------------------------------------------------- -- #
# -- Establecer el sistema de medicion de la computadora
Sys.setlocale(category = "LC_ALL", locale = "")
# -- Huso horario
Sys.setenv(tz="America/Monterrey")
options(tz="America/Monterrey")
Sys.setenv(TZ="America/Monterrey")
options(TZ="America/Monterrey")
# -- -------------------------------------------------------------------------------------------- #
# -- --------------------------------------------------------------------- Paquetes a utilizar -- #
pkg <- c("base","downloader","dplyr","fBasics","forecast","googlesheets","grid",
"gridExtra","httr","h2o","jsonlite","knitr","lmtest","lubridate","moments",
"matrixStats", "PerformanceAnalytics","plyr","quantmod","randomForest",
"reshape2","RCurl","stats","scales","tree","tseries",
"TTR","TSA","twitteR","XML","xts","xlsx","zoo")
inst <- pkg %in% installed.packages()
if(length(pkg[!inst]) > 0) install.packages(pkg[!inst])
instpackages <- lapply(pkg, library, character.only=TRUE)
# -- -------------------------------------------------------------------------------------------- #
# -- ------------------------------------------------------------ Cargar archivos desde GitHub -- #
RawGitHub <- "https://raw.githubusercontent.com/IFFranciscoME/"
ROandaAPI <- paste(RawGitHub,"ROandaAPI/master/ROandaAPI.R",sep="")
downloader::source_url(ROandaAPI,prompt=FALSE,quiet=TRUE)
RTradingPal   <- paste(RawGitHub,"RTradingPalAPI/master/RTradingPalAPI.R",sep="")
downloader::source_url(RTradingPal,prompt=FALSE,quiet=TRUE)
DataProcessor <- paste(RawGitHub,"DataProcessor/master/DataProcessor.R",sep="")
downloader::source_url(DataProcessor,prompt=FALSE,quiet=TRUE)
# -- ETAPA 1 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ------------------- R_MachineTrader_Registro -- Registro -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/R_MachineTrader_Registro.R', echo=TRUE)
# -- ETAPA 2 --------------------------------------------------------------------------------- -- #
# -- Recolector de datos a utilizar en  el sistema ------------- 1_H4_MT1_Colector -- Colector -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/1_H4_MT1_Colector.R', echo=TRUE)
# -- ETAPA 3 --------------------------------------------------------------------------------- -- #
# -- Algoritmo 01 BoxJenkins -------------------------------------- 2_H4_MT1_Algo -- Algoritmo -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/2_H4_MT1_Algo.R', echo=TRUE)
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/R_MachineTrader_Trader.R', echo=TRUE)
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/0_H4_MT1_Controlador.R', echo=TRUE)
# ----------------------------------------------------------------------------------------------- #
# -- Desarrollador que Manteniene: FranciscoME -- francisco@tradingpal.com ------------------- -- #
# -- Codigo: 0_H4_MT1_Controlador ------------------------------------------------------------ -- #
# -- Licencia: Propiedad exclusiva de TradingPal --------------------------------------------- -- #
# -- Uso: Controlador general para Sistema H4 ------------------------------------------------ -- #
# -- Dependencias: Lista de Paquetes de R, Conexion a internet, GitHub, OANDA API ------------ -- #
# ----------------------------------------------------------------------------------------------- #
# -- Borrar todos los elementos del environment
rm(list=ls())
# -- ETAPA 0 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ----------------------------------- 0_H4_MT1_Controlador -- #
# -- ----------------------------------------------------------------------------------------- -- #
# -- Establecer el sistema de medicion de la computadora
Sys.setlocale(category = "LC_ALL", locale = "")
# -- Huso horario
Sys.setenv(tz="America/Monterrey")
options(tz="America/Monterrey")
Sys.setenv(TZ="America/Monterrey")
options(TZ="America/Monterrey")
# -- -------------------------------------------------------------------------------------------- #
# -- --------------------------------------------------------------------- Paquetes a utilizar -- #
pkg <- c("base","downloader","dplyr","fBasics","forecast","googlesheets","grid",
"gridExtra","httr","h2o","jsonlite","knitr","lmtest","lubridate","moments",
"matrixStats", "PerformanceAnalytics","plyr","quantmod","randomForest",
"reshape2","RCurl","stats","scales","tree","tseries",
"TTR","TSA","twitteR","XML","xts","xlsx","zoo")
inst <- pkg %in% installed.packages()
if(length(pkg[!inst]) > 0) install.packages(pkg[!inst])
instpackages <- lapply(pkg, library, character.only=TRUE)
# -- -------------------------------------------------------------------------------------------- #
# -- ------------------------------------------------------------ Cargar archivos desde GitHub -- #
RawGitHub <- "https://raw.githubusercontent.com/IFFranciscoME/"
ROandaAPI <- paste(RawGitHub,"ROandaAPI/master/ROandaAPI.R",sep="")
downloader::source_url(ROandaAPI,prompt=FALSE,quiet=TRUE)
RTradingPal   <- paste(RawGitHub,"RTradingPalAPI/master/RTradingPalAPI.R",sep="")
downloader::source_url(RTradingPal,prompt=FALSE,quiet=TRUE)
DataProcessor <- paste(RawGitHub,"DataProcessor/master/DataProcessor.R",sep="")
downloader::source_url(DataProcessor,prompt=FALSE,quiet=TRUE)
# -- ETAPA 1 --------------------------------------------------------------------------------- -- #
# -- Inicializador general de sistema ------------------- R_MachineTrader_Registro -- Registro -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/R_MachineTrader_Registro.R', echo=TRUE)
# -- ETAPA 2 --------------------------------------------------------------------------------- -- #
# -- Recolector de datos a utilizar en  el sistema ------------- 1_H4_MT1_Colector -- Colector -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/1_H4_MT1_Colector.R', echo=TRUE)
# -- ETAPA 3 --------------------------------------------------------------------------------- -- #
# -- Algoritmo 01 BoxJenkins -------------------------------------- 2_H4_MT1_Algo -- Algoritmo -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/H4/H4_MT1/2_H4_MT1_Algo.R', echo=TRUE)
# -- ETAPA 4 --------------------------------------------------------------------------------- -- #
# -- Trader para colocar operaciones ---------------------- R_MachineTrader_Trader -- Respaldo -- #
# -- ----------------------------------------------------------------------------------------- -- #
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/R_MachineTrader_Trader.R', echo=TRUE)
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/R_MachineTrader_Mensajero.R', echo=TRUE)
Inst_H4
Inst_H8
Inst_D
Instrumento
StopLoss
TakeProfit
Lotes
Trade
MD
DatosSMS
Msn
Mensaje <- paste("|| Prueba ||", Msn, sep = " ")
Mensaje
postForm(Http3, .params = c(From = "+14072701470", To = Francisco, Body = Mensaje))
options(RCurlOptions = list(
cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"),
httpauth=AUTH_BASIC ))
postForm(Http3, .params = c(From = "+14072701470", To = Francisco, Body = Mensaje))
options(RCurlOptions = list(
cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
postForm(Http3, .params = c(From = "+14072701470", To = Francisco, Body = Mensaje))
source('C:/Trabajo/Repositorios/BitBucket/R_MachineTrader/D/D_MT1/0_D_MT1_Controlador.R', echo=TRUE)
