
-- Instalar GIT ---

sudo yum install git

-- Conectarse Remotamente a la EC2 desde Terminal UBUNTU con ssh --

Pre-requisito 1: Install an SSH client
Your Linux computer most likely includes an SSH client by default. You can check for an SSH client by typing ssh at the command line. If your computer doesn't recognize the command, the OpenSSH project provides a free implementation of the full suite of SSH tools. For more information, see http://www.openssh.org. 


http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html

Pre-Requisito 2: Install the Amazon EC2 CLI Tools
(Optional) If you're using a public AMI from a third party, you can use the command line tools to verify the fingerprint. For more information about installing the AWS CLI, see Getting Set Up in the AWS Command Line Interface User Guide. For more information about installing the Amazon EC2 CLI, see Setting Up the Tools in the Amazon EC2 Command Line Reference.

	Pre-Requisito 2.1: Getting Set Up with the AWS Command Line Interface (CLI)
	Before you can start using the AWS Command Line Interface, you must sign up for an AWS account (if you don't already have one) and set 		up your CLI environment. Depending on your operating system and environment, there are different ways to install the AWS CLI: an MSI 		installer, 	a bundled installer, or pip. The following sections will help you decide which option to use. (The AWS CLI makes API 		calls to services over HTTPS. Outbound connections on TCP port 443 must be enabled in order to perform calls.)

	Pre-Requisito 2.2: To get your access key ID and secret access key
	Access keys consist of an access key ID and secret access key, which are used to sign programmatic requests that you make to AWS. If 		you don't have access keys, you can create them by using the AWS Management Console. We recommend that you use IAM access keys instead 		of AWS root account access keys. IAM lets you securely control access to AWS services and resources in your AWS account. (To create 		access keys, you must have permissions to perform the required IAM actions. For more information, see Granting IAM User Permission to 		Manage Password Policy and Credentials in the IAM User Guide.)

	Paso1.Open the IAM console.

	Paso2.In the navigation pane, choose Users.

	Paso3.Choose your IAM user name (not the check box).

	Paso4.Choose the Security Credentials tab and then choose Create Access Key.

	Paso5.To see your access key, choose Show User Security Credentials. Your credentials will look something like this:

	        Access Key ID: AKIAIOSFODNN7EXAMPLE
	      	Secret Access Key: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

	Paso6.Choose Download Credentials, and store the keys in a secure location.

    	Your secret key will no longer be available through the AWS Management Console; you will have the only copy. Keep it confidential in 		order to protect your account, and never email it. Do not share it outside your organization, even if an inquiry appears to come from 		AWS or Amazon.com. No one who legitimately represents Amazon will ever ask you for your secret key. 


	Pre-Requisito 2.3: Installing the AWS Command Line Interface

	The AWS CLI comes pre-installed on the Amazon Linux AMI. Run sudo yum update after connecting to the instance to get the latest version 	of the package available via yum. If you need a more recent version of the AWS CLI than what is available in the Amazon updates 
	repository, uninstall the package (sudo yum remove aws-cli) and then install using pip.


	Choose an Installation Method

	There are a number of different ways to install the AWS CLI on your machine, depending on what operating system and environment you are 	using:  (The awscli package may be available in repositories for other package managers such as APT, yum and Homebrew, but it is not 		guaranteed to be the latest version. To make sure you have the latest version, use one of the installation methods described here.)

	Install the AWS CLI Using Pip

	Pip is a Python-based tool that offers convenient ways to install, upgrade, and remove Python packages and their dependencies. Pip is 		the recommended method of installing the CLI on Mac and Linux.

	Linux, OS X, or Unix

	$ sudo pip install awscli

	Note

	If you installed a new version of Python alongside an older version that came with your distribution, or update pip to the latest 		version, you may get an error like the following when trying to invoke pip with sudo:

	sudo: pip: command not found

	To work around this issue, use which pip to locate the executable, and then invoke it directly by using an absolute path when 			installing the AWS CLI:

	$ which pip
	/usr/local/bin/pip
	$ sudo /usr/local/bin/pip install awscli

	To upgrade an existing AWS CLI installation, use the --upgrade option:
	
	$ sudo pip install --upgrade awscli

	Pip installs the aws executable to /usr/bin/aws. The awscli library (which does the actual work) is installed to the 'site-packages' 		folder in Python's installation directory.

Pre-Requisito 3: Configuring the AWS Command Line Interface

This section explains how to configure settings that the AWS Command Line Interface uses when interacting with AWS, such as your security credentials and the default region. The AWS CLI signs requests on your behalf, and includes a date in the signature. Ensure that your computer's date and time are set correctly; if not, the date in the signature may not match the date of the request, and AWS rejects the request


Using the Examples in this Guide

The examples in this guide are formatted with the following conventions:

    Prompt – The command prompt is displayed as a dollar sign ('$'). Do not include the prompt when you type commands.

    Directory – When commands must be executed from a specific directory, the directory name is shown before the prompt symbol.

    User Input – Command text that you should enter at the command line is formatted as user input.

    Replaceable Text – Variable text, including names of resources that you choose, or IDs generated by AWS services that you must include in commands, is formatted as replaceable text. In multiple line commands or commands where specific keyboard input is required, keyboard commands can also be shown as replaceable text.

    Output – Output returned by AWS services is shown beneath user input without any special formatting.

For example, the following command includes user input, replaceable text, and output:

$ aws configure
AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE
AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
Default region name [None]: us-west-2
Default output format [None]: ENTER

To use this example, type aws configure at the command line and press Enter. aws configure is the command. This command is interactive, so the AWS CLI outputs lines of texts, prompting you to enter additional information. Enter each of your access keys in turn and press Enter. Then, enter a region name in the format shown, press Enter, and press Enter a final time to skip the output format setting. The final Enter command is shown as replaceable text because there is no user input for that line. Otherwise, it would be implied.

http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html
http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-set-up.html




-- Correr un Script en horario recurrente --
